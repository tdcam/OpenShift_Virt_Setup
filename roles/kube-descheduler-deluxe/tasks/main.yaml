---
- name: Create namespace for Descheduler if missing
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ descheduler_namespace }}"
    state: present

- name: Wait for descheduler-operator pod to be running
  shell: |
    until oc get pods -n {{ descheduler_namespace }} | grep descheduler-operator | grep Running; do
      sleep 5
    done
  retries: 20
  delay: 15
  register: operator_ready
  changed_when: false

- name: Create KubeDescheduler custom resource
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operator.openshift.io/v1
      kind: KubeDescheduler
      metadata:
        name: cluster
        namespace: "{{ descheduler_namespace }}"
      spec:
        managementState: Managed
        mode: Predictive
        deschedulingIntervalSeconds: "{{ descheduler_interval_seconds }}"
        profiles:
          - AffinityAndTaints
          - TopologyAndDuplicates
          - LifecycleAndUtilization
        profileCustomizations:
          devEnableEvictionsInBackground: true

- name: Wait for descheduler pod to be ready
  shell: |
    until oc get pods -n {{ descheduler_namespace }} | grep descheduler | grep 1/1 | grep Running; do
      sleep 5
    done
  retries: 20
  delay: 15
  register: descheduler_ready
  changed_when: false

- name: Conditionally install Node Health Check Operator
  when: install_node_healthcheck_operator
  block:
    - name: Install Node Health Check Operator Subscription
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: node-healthcheck-operator
            namespace: openshift-operators
          spec:
            channel: stable
            name: node-healthcheck-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
            installPlanApproval: Automatic

- name: Finished installing Descheduler (and optional NHC)
  debug:
    msg: "âœ… Kube Descheduler (and optional Node Health Check) fully installed and configured!"

